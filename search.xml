<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>springframework深入1-编译</title>
    <url>/archives/3717513769.html</url>
    <content><![CDATA[<h3 id="idea编译springframework"><a href="#idea编译springframework" class="headerlink" title="idea编译springframework"></a>idea编译springframework</h3><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol>
<li><p>下载gradle:<a href="https://services.gradle.org/distributions/" target="_blank" rel="noopener">https://services.gradle.org/distributions/</a>   注意版本兼容。</p>
</li>
<li><p>​    下载地址1：官网：<a href="https://github.com/spring-projects/spring-framework" target="_blank" rel="noopener">https://github.com/spring-projects/spring-framework</a></p>
</li>
<li><p>下载地址2：5.1源码</p>
<p>​    构建之前请阅读：spring提供了eclipse和idea两种IDE的方式，本文使用idea</p>
<a id="more"></a>
</li>
<li><p>编译过程报错解决办法:</p>
<p>代理有问题timeout ：调整url：build.grades.不然不能编译</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">		maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span>&#125;</span><br><span class="line">        google()</span><br><span class="line">		maven &#123; url <span class="string">"https://repo.spring.io/plugins-release"</span> &#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>也可以在gradle  GRADLE_HOME  目录:创建：init.gradle ，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        def ALIYUN_REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public'</span><br><span class="line">        def ALIYUN_JCENTER_URL = 'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            if(repo instanceof MavenArtifactRepository)&#123;</span><br><span class="line">                def url = repo.url.toString()</span><br><span class="line">                if (url.startsWith('https://repo1.maven.org/maven2')) &#123;</span><br><span class="line">                    project.logger.lifecycle "Repository $&#123;repo.url&#125; replaced by $ALIYUN_REPOSITORY_URL."</span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">                if (url.startsWith('https://jcenter.bintray.com/')) &#123;</span><br><span class="line">                    project.logger.lifecycle "Repository $&#123;repo.url&#125; replaced by $ALIYUN_JCENTER_URL."</span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url ALIYUN_REPOSITORY_URL</span><br><span class="line">            url ALIYUN_JCENTER_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="5">
<li><p>gardle -v确认下相应的版本。</p>
</li>
<li><p>gradle clean 清理下项目。</p>
</li>
<li><p>修改项目中的gradle.properties</p>
<p>org.gradle.daemon=true<br>org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8<br>org.gradle.parallel=true<br>org.gradle.configureondemand=true</p>
</li>
<li><p>导入idea，注意调整 gradle配置，和kotlin配置，调整项目jdk版本。</p>
</li>
<li><p>点击 spring —tasks–build.</p>
</li>
<li><p>参考import-into-idea.md编译包</p>
<p>11..阅读引入idea的文件，发现，在构建直线我们需要预先构建 spring-oxm、spring-core，本文提议使用CMD预先构建如下四个目录</p>
</li>
<li><p><img src="http://q7hebwg99.bkt.clouddn.com/1584582962558.png" alt></p>
</li>
</ol>
<p>12.导入idea编译 ，报错，处理：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//compileGroovy.dependsOn = compileGroovy.taskDependencies.values - &quot;compileJava&quot;compileKotlin.dependsOn(compileGroovy)compileKotlin.classpath += files(compileGroovy.destinationDir)</span><br></pre></td></tr></table></figure>
<p>13.unload  aspect。</p>
<p>14.确保都编译完毕 创建model：然后先编译model试试会不会报错，如果ok继续走下去。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">compile project(&apos;:spring-context&apos;)</span><br><span class="line">compile project(&apos;:spring-oxm&apos;)</span><br><span class="line">compile project(&apos;:spring-core&apos;)</span><br><span class="line">compile project(&apos;:spring-beans&apos;)</span><br><span class="line">compile project(&apos;:spring-expression&apos;)</span><br></pre></td></tr></table></figure>
<p>调试代码。</p>
]]></content>
      <categories>
        <category>springframework</category>
      </categories>
      <tags>
        <tag>springframework</tag>
        <tag>springAOP</tag>
        <tag>springIOC</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyWalking深入分析</title>
    <url>/archives/303649107.html</url>
    <content><![CDATA[<p>2020年3月15日，<br>    等工作稳定下来之后，开始做这块内容的深度学习！</p>
]]></content>
      <categories>
        <category>skyWalking</category>
      </categories>
      <tags>
        <tag>skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud</title>
    <url>/archives/2527336709.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好，这里需要密码。" /><label>您好，这里需要密码。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="59aaf9b6fd253e867b3ce5d1dca84dc1b898f0a23b98d8bfe99fc64cb7bf9735">d7b3c9558016a7fcd503b043b78b3d355d8b98f89f94f57817484c0c18b4b979a726616bbbfd3892beff11a4fd732dd8df9062a95fd6fcb68a0a10160e2d64467746e18e8eed7bc1d57bc9ab0ceb6ddd02bfc3883d4d2b771f00ff333405ad0e3502910d6439131d9f6551791796c8019c8f9d45f9bb30c0b110b4f56335b9a7957ec8937b91f4c7e844f002e3001706198a364f7e4d9f96a9dae3b0543e3b34ddc5b316c8d5d1907ee52466098bc638c89d435b74ea9d948d243e8fed34e229c5549603c1ebc3c2df08e292ab41f8e6</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>NACOS</tag>
        <tag>ZUUL</tag>
        <tag>EURKA</tag>
        <tag>LIFE</tag>
      </tags>
  </entry>
</search>
